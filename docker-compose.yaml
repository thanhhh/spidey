version: "3.6"

services:
  account_app:
    build:
      context: "."
      dockerfile: "./account/app.dockerfile"
    depends_on:
      - "account_db"
    environment:
      DATABASE_URL: "postgres://db_user:123456@account_db/account_db?sslmode=disable"
  
  account_db:
    build:
      context: "./account"
      dockerfile: "./db.dockerfile"
    environment:
      POSTGRES_DB: "account_db"
      POSTGRES_USER: "db_user"
      POSTGRES_PASSWORD: "123456"
    restart: "unless-stopped"
  
  catalog_app:
    build:
      context: "."
      dockerfile: "./catalog/app.dockerfile"
    depends_on:
      - "account_db"
    environment:
      ELASTIC_URL: "http://catalog_elastic:9200"
  
  catalog_elastic:
    image: "docker.elastic.co/elasticsearch/elasticsearch:6.3.0"
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      discovery.type: "single-node"
    expose:
      - "9200"

  order_app:
    build:
      context: "."
      dockerfile: "./order/app.dockerfile"
    depends_on:
      - "order_db"
      - "account_app"
      - "catalog_app"
    environment:
      DATABASE_URL: "postgres://db_user:123456@order_db/order_db?sslmode=disable"
      ACCOUNT_URL: "account_app:8080"
      CATALOG_URL: "catalog_app:8080"
  
  order_db:
    build:
      context: "./order"
      dockerfile: "./db.dockerfile"
    environment:
      POSTGRES_DB: "order_db"
      POSTGRES_USER: "db_user"
      POSTGRES_PASSWORD: "123456"
    restart: "unless-stopped"
  
  graphql_app:
    build:
      context: "."
      dockerfile: "./graphql/app.dockerfile"
    depends_on:
      - "account_app"
      - "catalog_app"
      - "order_app"
    environment:
      ACCOUNT_SERVICE_URL: "account_app:8080"
      CATALOG_SERVICE_URL: "catalog_app:8080"
      ORDER_SERVICE_URL: "order_app:8080"
    ports:
      - "8080:8080"